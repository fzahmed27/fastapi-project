{"ast":null,"code":"var _jsxFileName = \"/Users/firozahmed/Desktop/afc-calibration/afc-calibration-app/src/components/Valve.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ValveDiagram.css'; // Import the CSS \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ValveDiagram = () => {\n  _s();\n  const initialValves = [{\n    id: 'valve1',\n    status: 'Closed',\n    color: 'red'\n  }, {\n    id: 'valve2',\n    status: 'Closed',\n    color: 'red'\n  }, {\n    id: 'valve3',\n    status: 'Closed',\n    color: 'red'\n  }, {\n    id: 'valve4',\n    status: 'Closed',\n    color: 'red'\n  }, {\n    id: 'valve5',\n    status: 'Closed',\n    color: 'red'\n  }, {\n    id: 'valve6',\n    status: 'Closed',\n    color: 'red'\n  }, {\n    id: 'valve7',\n    status: 'Closed',\n    color: 'red'\n  }];\n  const [valves, setValves] = useState(initialValves);\n  const toggleValve = id => {\n    setValves(prevValves => prevValves.map(valve => valve.id === id ? {\n      ...valve,\n      status: valve.status === 'Closed' ? 'Open' : 'Closed',\n      color: valve.color === 'red' ? 'green' : 'red'\n    } : valve));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagram\",\n    children: valves.map((valve, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [index !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pipe horizontal-pipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"valve\",\n        id: valve.id,\n        style: {\n          backgroundColor: valve.color\n        },\n        onClick: () => toggleValve(valve.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/valve-icon.png`,\n          alt: valve.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), valve.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ValveDiagram, \"R/+hW8D2jq1KTc99P6fZxDTlCGU=\");\n_c = ValveDiagram;\nexport default ValveDiagram;\nvar _c;\n$RefreshReg$(_c, \"ValveDiagram\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ValveDiagram","_s","initialValves","id","status","color","valves","setValves","toggleValve","prevValves","map","valve","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","onClick","src","process","env","PUBLIC_URL","alt","_c","$RefreshReg$"],"sources":["/Users/firozahmed/Desktop/afc-calibration/afc-calibration-app/src/components/Valve.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ValveDiagram.css';  // Import the CSS \n\nconst ValveDiagram = () => {\n  const initialValves = [\n    { id: 'valve1', status: 'Closed', color: 'red' },\n    { id: 'valve2', status: 'Closed', color: 'red' },\n    { id: 'valve3', status: 'Closed', color: 'red' },\n    { id: 'valve4', status: 'Closed', color: 'red' },\n    { id: 'valve5', status: 'Closed', color: 'red' },\n    { id: 'valve6', status: 'Closed', color: 'red' },\n    { id: 'valve7', status: 'Closed', color: 'red' },\n  ];\n\n  const [valves, setValves] = useState(initialValves);\n\n  const toggleValve = (id) => {\n    setValves((prevValves) =>\n      prevValves.map((valve) =>\n        valve.id === id\n          ? {\n              ...valve,\n              status: valve.status === 'Closed' ? 'Open' : 'Closed',\n              color: valve.color === 'red' ? 'green' : 'red',\n            }\n          : valve\n      )\n    );\n  };\n\n  return (\n    <div className=\"diagram\">\n      {valves.map((valve, index) => (\n        <>\n          {index !== 0 && <div className=\"pipe horizontal-pipe\"></div>}\n          <div\n            className=\"valve\"\n            id={valve.id}\n            style={{ backgroundColor: valve.color }}\n            onClick={() => toggleValve(valve.id)}\n          >\n            <img src={`${process.env.PUBLIC_URL}/valve-icon.png`} alt={valve.status} />\n            {valve.status}\n          </div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default ValveDiagram;\n\n  \n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,aAAa,GAAG,CACpB;IAAEC,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAM,CAAC,CACjD;EAED,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACO,aAAa,CAAC;EAEnD,MAAMM,WAAW,GAAIL,EAAE,IAAK;IAC1BI,SAAS,CAAEE,UAAU,IACnBA,UAAU,CAACC,GAAG,CAAEC,KAAK,IACnBA,KAAK,CAACR,EAAE,KAAKA,EAAE,GACX;MACE,GAAGQ,KAAK;MACRP,MAAM,EAAEO,KAAK,CAACP,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,QAAQ;MACrDC,KAAK,EAAEM,KAAK,CAACN,KAAK,KAAK,KAAK,GAAG,OAAO,GAAG;IAC3C,CAAC,GACDM,KACN,CACF,CAAC;EACH,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBP,MAAM,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEG,KAAK,kBACvBjB,OAAA,CAAAE,SAAA;MAAAc,QAAA,GACGC,KAAK,KAAK,CAAC,iBAAIjB,OAAA;QAAKe,SAAS,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5DrB,OAAA;QACEe,SAAS,EAAC,OAAO;QACjBT,EAAE,EAAEQ,KAAK,CAACR,EAAG;QACbgB,KAAK,EAAE;UAAEC,eAAe,EAAET,KAAK,CAACN;QAAM,CAAE;QACxCgB,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACG,KAAK,CAACR,EAAE,CAAE;QAAAU,QAAA,gBAErChB,OAAA;UAAKyB,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,iBAAiB;UAACC,GAAG,EAAEf,KAAK,CAACP;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC1EP,KAAK,CAACP,MAAM;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA,eACN,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7CID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}