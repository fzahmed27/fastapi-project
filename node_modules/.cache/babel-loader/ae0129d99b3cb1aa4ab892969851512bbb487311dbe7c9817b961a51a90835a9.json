{"ast":null,"code":"var _jsxFileName = \"/Users/firozahmed/Desktop/afc-calibration/afc-calibration-app/src/components/Valve.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ValveDiagram.css'; // Import the CSS (create this file)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValveDiagram = () => {\n  _s();\n  const initialValves = Array.from({\n    length: 7\n  }, (_, index) => ({\n    id: `valve${index + 1}`,\n    status: 'Closed'\n  }));\n  const [valves, setValves] = useState(initialValves);\n  const toggleValve = id => {\n    setValves(prevValves => prevValves.map(valve => valve.id === id ? {\n      ...valve,\n      status: valve.status === 'Closed' ? 'Open' : 'Closed'\n    } : valve));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagram\",\n    children: valves.map((valve, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [index !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pipe horizontal-pipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"valve\",\n        id: valve.id,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/valve-icon-${valve.status}.png`,\n          alt: valve.status,\n          onClick: () => toggleValve(valve.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), valve.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, valve.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ValveDiagram, \"R/+hW8D2jq1KTc99P6fZxDTlCGU=\");\n_c = ValveDiagram;\nexport default ValveDiagram;\nvar _c;\n$RefreshReg$(_c, \"ValveDiagram\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ValveDiagram","_s","initialValves","Array","from","length","_","index","id","status","valves","setValves","toggleValve","prevValves","map","valve","className","children","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/firozahmed/Desktop/afc-calibration/afc-calibration-app/src/components/Valve.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ValveDiagram.css';  // Import the CSS (create this file)\n\nconst ValveDiagram = () => {\n  const initialValves = Array.from({ length: 7 }, (_, index) => ({\n    id: `valve${index + 1}`,\n    status: 'Closed',\n  }));\n\n  const [valves, setValves] = useState(initialValves);\n\n  const toggleValve = (id) => {\n    setValves((prevValves) =>\n      prevValves.map((valve) =>\n        valve.id === id\n          ? {\n              ...valve,\n              status: valve.status === 'Closed' ? 'Open' : 'Closed',\n            }\n          : valve\n      )\n    );\n  };\n\n  return (\n    <div className=\"diagram\">\n      {valves.map((valve, index) => (\n        <React.Fragment key={valve.id}>\n          {index !== 0 && <div className=\"pipe horizontal-pipe\"></div>}\n          <div className=\"valve\" id={valve.id}>\n            <img \n              src={`${process.env.PUBLIC_URL}/valve-icon-${valve.status}.png`} \n              alt={valve.status} \n              onClick={() => toggleValve(valve.id)} \n            />\n            {valve.status}\n          </div>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default ValveDiagram;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;IAC7DC,EAAE,EAAG,QAAOD,KAAK,GAAG,CAAE,EAAC;IACvBE,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;EAEH,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAACK,aAAa,CAAC;EAEnD,MAAMU,WAAW,GAAIJ,EAAE,IAAK;IAC1BG,SAAS,CAAEE,UAAU,IACnBA,UAAU,CAACC,GAAG,CAAEC,KAAK,IACnBA,KAAK,CAACP,EAAE,KAAKA,EAAE,GACX;MACE,GAAGO,KAAK;MACRN,MAAM,EAAEM,KAAK,CAACN,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG;IAC/C,CAAC,GACDM,KACN,CACF,CAAC;EACH,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBP,MAAM,CAACI,GAAG,CAAC,CAACC,KAAK,EAAER,KAAK,kBACvBR,OAAA,CAACH,KAAK,CAACsB,QAAQ;MAAAD,QAAA,GACZV,KAAK,KAAK,CAAC,iBAAIR,OAAA;QAAKiB,SAAS,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5DvB,OAAA;QAAKiB,SAAS,EAAC,OAAO;QAACR,EAAE,EAAEO,KAAK,CAACP,EAAG;QAAAS,QAAA,gBAClClB,OAAA;UACEwB,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,eAAcX,KAAK,CAACN,MAAO,MAAM;UAChEkB,GAAG,EAAEZ,KAAK,CAACN,MAAO;UAClBmB,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACG,KAAK,CAACP,EAAE;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EACDP,KAAK,CAACN,MAAM;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA,GATaP,KAAK,CAACP,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUb,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtCID,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}